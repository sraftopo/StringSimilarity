const axios = require('axios');

const SERVER_URL = 'http://localhost:3031';

async function testExactStructure() {
    console.log('üß™ Testing Exact Structure from User Request...\n');
    
    try {
        // Test with the exact structure provided by the user
        console.log('1. Testing exact user structure...');
        const exactRequest = {
            inputObject: {
                practicetypes: {
                    practicetype_title: 'ŒïŒæœâœÑŒµœÅŒπŒ∫ŒÆ Œ±Œ∫œÑŒπŒΩŒøŒ∏ŒµœÅŒ±œÄŒµŒØŒ± ŒºŒµ Œ±Œ∫œÑŒØŒΩŒµœÇ Œß',
                    practicetype_number: 1
                },
                practice_number: 1,
                practice_code: 'Œì1',
                practice_id: 20,
                uniqueId: '19318',
                r: [
                    {
                        PracticeTypeTitle: 'ŒúŒ±œÉœÑŒøŒ≥œÅŒ±œÜŒØŒµœÇ œÑŒøŒºŒøœÉœçŒΩŒ∏ŒµœÉŒ∑œÇ Œ∫Œ±Œπ œÉœÑŒµœÅŒµŒøœÑŒ±Œ∫œÑŒπŒ∫ŒÆœÇ Œ≤ŒπŒøœàŒØŒ±œÇ ŒµŒΩœÑœåœÇ œÑŒºŒ∑ŒºŒ¨œÑœâŒΩ ŒπŒ±œÑœÅŒπŒ∫ŒÆœÇ Œ±œÄŒµŒπŒ∫œåŒΩŒπœÉŒ∑œÇ, ŒΩŒøœÉŒøŒ∫ŒøŒºŒµŒØŒøœÖ ŒÆ ŒπŒ¥ŒπœâœÑŒπŒ∫ŒÆœÇ Œ∫ŒªŒπŒΩŒπŒ∫ŒÆœÇ/Œ¥ŒπŒ±Œ≥ŒΩœâœÉœÑŒπŒ∫Œøœç Œ∫Œ≠ŒΩœÑœÅŒøœÖ',
                        PracticeID: 20,
                        PracticeTypeID: 20,
                        ApplicationCategoryID: 3
                    },
                    {
                        PracticeTypeTitle: 'ŒîŒπŒ±Œ≥ŒΩœâœÉœÑŒπŒ∫ŒÆ Œ∫Œ±Œπ ŒµœÄŒµŒºŒ≤Œ±œÑŒπŒ∫ŒÆ Œ±Œ∫œÑŒπŒΩŒøœÉŒ∫œåœÄŒ∑œÉŒ∑ ŒµŒΩœÑœåœÇ œÑŒºŒÆŒºŒ±œÑŒøœÇ ŒπŒ±œÑœÅŒπŒ∫ŒÆœÇ Œ±œÄŒµŒπŒ∫œåŒΩŒπœÉŒ∑œÇ ŒΩŒøœÉŒøŒ∫ŒøŒºŒµŒØŒøœÖ ŒÆ ŒπŒ¥ŒπœâœÑŒπŒ∫ŒÆœÇ Œ∫ŒªŒπŒΩŒπŒ∫ŒÆœÇ',
                        PracticeID: 20,
                        PracticeTypeID: 21,
                        ApplicationCategoryID: 3
                    },
                    {
                        PracticeTypeTitle: 'ŒîŒπŒ±Œ≥ŒΩœâœÉœÑŒπŒ∫ŒÆ Œ∫Œ±Œπ ŒµœÄŒµŒºŒ≤Œ±œÑŒπŒ∫ŒÆ Œ±Œ∫œÑŒπŒΩŒøœÉŒ∫œåœÄŒ∑œÉŒ∑ ŒµŒ∫œÑœåœÇ œÑŒºŒÆŒºŒ±œÑŒøœÇ ŒπŒ±œÑœÅŒπŒ∫ŒÆœÇ Œ±œÄŒµŒπŒ∫œåŒΩŒπœÉŒ∑œÇ ŒµŒΩœÑœåœÇ ŒΩŒøœÉŒøŒ∫ŒøŒºŒµŒØŒøœÖ\r\nŒÆ ŒπŒ¥ŒπœâœÑŒπŒ∫ŒÆœÇ Œ∫ŒªŒπŒΩŒπŒ∫ŒÆœÇ (œåœÄœâœÇ ŒµŒΩŒ¥ŒµŒπŒ∫œÑŒπŒ∫Œ¨ œÑŒºŒÆŒºŒ±œÑŒ± ŒøœÅŒ∏ŒøœÄŒ±ŒπŒ¥ŒπŒ∫Œ¨, Œ≥Œ±œÉœÑœÅŒµŒΩœÑŒµœÅŒøŒªŒøŒ≥ŒπŒ∫Œ¨, ŒøœÖœÅŒøŒªŒøŒ≥ŒπŒ∫Œ¨,\r\nœáŒµŒπœÅŒøœÖœÅŒ≥ŒπŒ∫Œ¨, Œ±Œ≥Œ≥ŒµŒπŒøœáŒµŒπœÅŒøœÖœÅŒ≥ŒπŒ∫Œ¨, Œ∫ŒªœÄ)',
                        PracticeID: 20,
                        PracticeTypeID: 22,
                        ApplicationCategoryID: 3
                    },
                    {
                        PracticeTypeTitle: 'ŒîŒπŒ±Œ≥ŒΩœâœÉœÑŒπŒ∫ŒÆ Œ∫Œ±Œπ ŒµœÄŒµŒºŒ≤Œ±œÑŒπŒ∫ŒÆ œÖœÄŒøŒªŒøŒ≥ŒπœÉœÑŒπŒ∫ŒÆ œÑŒøŒºŒøŒ≥œÅŒ±œÜŒØŒ± ŒµŒΩœÑœåœÇ œÑŒºŒÆŒºŒ±œÑŒøœÇ ŒπŒ±œÑœÅŒπŒ∫ŒÆœÇ Œ±œÄŒµŒπŒ∫œåŒΩŒπœÉŒ∑œÇ\r\nŒΩŒøœÉŒøŒ∫ŒøŒºŒµŒØŒøœÖ ŒÆ ŒπŒ¥ŒπœâœÑŒπŒ∫ŒÆœÇ Œ∫ŒªŒπŒΩŒπŒ∫ŒÆœÇ/Œ¥ŒπŒ±Œ≥ŒΩœâœÉœÑŒπŒ∫Œøœç Œ∫Œ≠ŒΩœÑœÅŒøœÖ',
                        PracticeID: 20,
                        PracticeTypeID: 23,
                        ApplicationCategoryID: 3
                    },
                    {
                        PracticeTypeTitle: 'ŒïœÄŒµŒºŒ≤Œ±œÑŒπŒ∫Œ≠œÇ Œ±Œ∫œÑŒπŒΩŒøŒªŒøŒ≥ŒπŒ∫Œ≠œÇ œÄœÅŒ±Œ∫œÑŒπŒ∫Œ≠œÇ œÉŒµ Œ±Œ≥Œ≥ŒµŒπŒøŒ≥œÅŒ¨œÜŒø ŒµŒΩœÑœåœÇ œÑŒºŒÆŒºŒ±œÑŒøœÇ ŒπŒ±œÑœÅŒπŒ∫ŒÆœÇ Œ±œÄŒµŒπŒ∫œåŒΩŒπœÉŒ∑œÇ\r\nŒΩŒøœÉŒøŒ∫ŒøŒºŒµŒØŒøœÖ ŒÆ ŒπŒ¥ŒπœâœÑŒπŒ∫ŒÆœÇ Œ∫ŒªŒπŒΩŒπŒ∫ŒÆœÇ',
                        PracticeID: 20,
                        PracticeTypeID: 24,
                        ApplicationCategoryID: 3
                    },
                    {
                        PracticeTypeTitle: 'ŒïœÄŒµŒºŒ≤Œ±œÑŒπŒ∫Œ≠œÇ Œ∫Œ±œÅŒ¥ŒπŒøŒªŒøŒ≥ŒπŒ∫Œ≠œÇ œÄœÅŒ±Œ∫œÑŒπŒ∫Œ≠œÇ (œåœÄœâœÇ ŒµŒΩŒ¥ŒµŒπŒ∫œÑŒπŒ∫Œ¨ Œ±ŒπŒºŒøŒ¥œÖŒΩŒ±ŒºŒπŒ∫ŒÆ-Œ∑ŒªŒµŒ∫œÑœÅŒøœÜœÖœÉŒπŒøŒªŒøŒ≥ŒØŒ±œÑŒøœÄŒøŒ∏Œ≠œÑŒ∑œÉŒ∑ Œ≤Œ∑ŒºŒ±œÑŒøŒ¥ŒøœÑœéŒΩ/Œ±œÄŒπŒΩŒπŒ¥œâœÑœéŒΩ, Œ±ŒΩœÑŒπŒ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ Œ≤Œ±ŒªŒ≤ŒØŒ¥œâŒΩ) œÉŒµ œÉœÑŒµœÜŒ±ŒΩŒπŒøŒ≥œÅŒ¨œÜŒø ŒµŒΩœÑœåœÇ\r\nŒΩŒøœÉŒøŒ∫ŒøŒºŒµŒØŒøœÖ ŒÆ ŒπŒ¥ŒπœâœÑŒπŒ∫ŒÆœÇ Œ∫ŒªŒπŒΩŒπŒ∫ŒÆœÇ',
                        PracticeID: 20,
                        PracticeTypeID: 25,
                        ApplicationCategoryID: 3
                    },
                    {
                        PracticeTypeTitle: 'ŒõŒµŒπœÑŒøœÖœÅŒ≥ŒØŒ± ŒµŒæŒøŒºŒøŒπœâœÑŒÆ œÉœÑŒ∑ŒΩ Œ±Œ∫œÑŒπŒΩŒøŒ∏ŒµœÅŒ±œÄŒµŒØŒ±',
                        PracticeID: 20,
                        PracticeTypeID: 26,
                        ApplicationCategoryID: 3
                    },
                    {
                        PracticeTypeTitle: 'ŒïŒæœâœÑŒµœÅŒπŒ∫ŒÆ Œ±Œ∫œÑŒπŒΩŒøŒ∏ŒµœÅŒ±œÄŒµŒØŒ± ŒºŒµ (Œ±) Œ±Œ∫œÑŒØŒΩŒµœÇ Œß (Œ≤) Œ¥Œ≠œÉŒºŒµœÇ Œ∑ŒªŒµŒ∫œÑœÅŒøŒΩŒØœâŒΩ',
                        PracticeID: 20,
                        PracticeTypeID: 27,
                        ApplicationCategoryID: 3
                    },
                    {
                        PracticeTypeTitle: '(Œ±) ŒïŒæœâœÑŒµœÅŒπŒ∫ŒÆ Œ±Œ∫œÑŒπŒΩŒøŒ∏ŒµœÅŒ±œÄŒµŒØŒ± Œ¥ŒπŒ±ŒºŒøœÅœÜŒøœçŒºŒµŒΩŒ∑œÇ Œ≠ŒΩœÑŒ±œÉŒ∑œÇ Œ±Œ∫œÑŒπŒΩŒøŒ≤œåŒªŒ∑œÉŒ∑œÇ (IMRT), (Œ≤) Œ±Œ∫œÑŒπŒΩŒøŒ∏ŒµœÅŒ±œÄŒµŒØŒ±\r\nŒ∫Œ±Œ∏ŒøŒ¥Œ∑Œ≥ŒøœçŒºŒµŒΩŒ∑ Œ±œÄŒµŒπŒ∫ŒøŒΩŒπœÉœÑŒπŒ∫Œ¨ (IGRT), (Œ≥) ŒøŒ≥Œ∫ŒøŒºŒµœÑœÅŒπŒ∫ŒÆ Œ±Œ∫œÑŒπŒΩŒøŒ∏ŒµœÅŒ±œÄŒµŒØŒ± Œ¥ŒπŒ±ŒºŒøœÅœÜŒøœçŒºŒµŒΩŒ∑œÇ Œ≠ŒΩœÑŒ±œÉŒ∑œÇ (VMAT),\r\n(Œ¥) œÉœÑŒµœÅŒµŒøœÑŒ±Œ∫œÑŒπŒ∫ŒÆ‚Äì Œ±Œ∫œÑŒπŒΩŒøœáŒµŒπœÅŒøœÖœÅŒ≥ŒπŒ∫ŒÆ (SRS , SBRT) ŒºŒµ Œ¥Œ≠œÉŒºŒµœÇ Œ±Œ∫œÑŒØŒΩœâŒΩ Œß',
                        PracticeID: 20,
                        PracticeTypeID: 28,
                        ApplicationCategoryID: 3
                    },
                    {
                        PracticeTypeTitle: 'ŒüŒªœåœÉœâŒºŒ∑ Œ±Œ∫œÑŒπŒΩŒøŒ≤œåŒªŒ∑œÉŒ∑ (TBI)',
                        PracticeID: 20,
                        PracticeTypeID: 29,
                        ApplicationCategoryID: 3
                    },
                    {
                        PracticeTypeTitle: 'ŒíœÅŒ±œáœÖŒ∏ŒµœÅŒ±œÄŒµŒØŒ± ŒºŒµ œáœÅŒÆœÉŒ∑ Œ±Œ∫œÑŒØŒΩœâŒΩ Œß',
                        PracticeID: 20,
                        PracticeTypeID: 30,
                        ApplicationCategoryID: 3
                    }
                ]
            },
            inputElement: 'practicetypes.practicetype_title',
            arrayOfObjects: [
                {
                    PracticeTypeTitle: 'ŒïŒæœâœÑŒµœÅŒπŒ∫ŒÆ Œ±Œ∫œÑŒπŒΩŒøŒ∏ŒµœÅŒ±œÄŒµŒØŒ± ŒºŒµ Œ±Œ∫œÑŒØŒΩŒµœÇ Œß',
                    PracticeID: 20,
                    PracticeTypeID: 27,
                    ApplicationCategoryID: 3
                },
                {
                    PracticeTypeTitle: 'ŒîŒπŒ±Œ≥ŒΩœâœÉœÑŒπŒ∫ŒÆ Œ∫Œ±Œπ ŒµœÄŒµŒºŒ≤Œ±œÑŒπŒ∫ŒÆ Œ±Œ∫œÑŒπŒΩŒøœÉŒ∫œåœÄŒ∑œÉŒ∑ ŒµŒΩœÑœåœÇ œÑŒºŒÆŒºŒ±œÑŒøœÇ ŒπŒ±œÑœÅŒπŒ∫ŒÆœÇ Œ±œÄŒµŒπŒ∫œåŒΩŒπœÉŒ∑œÇ ŒΩŒøœÉŒøŒ∫ŒøŒºŒµŒØŒøœÖ ŒÆ ŒπŒ¥ŒπœâœÑŒπŒ∫ŒÆœÇ Œ∫ŒªŒπŒΩŒπŒ∫ŒÆœÇ',
                    PracticeID: 20,
                    PracticeTypeID: 21,
                    ApplicationCategoryID: 3
                },
                {
                    PracticeTypeTitle: 'ŒëŒ∫œÑŒπŒΩŒøŒ∏ŒµœÅŒ±œÄŒµŒØŒ± Œ∫Œ±Œ∏ŒøŒ¥Œ∑Œ≥ŒøœçŒºŒµŒΩŒ∑ Œ±œÄŒµŒπŒ∫ŒøŒΩŒπœÉœÑŒπŒ∫Œ¨ (IGRT)',
                    PracticeID: 20,
                    PracticeTypeID: 28,
                    ApplicationCategoryID: 3
                },
                {
                    PracticeTypeTitle: 'ŒõŒµŒπœÑŒøœÖœÅŒ≥ŒØŒ± ŒµŒæŒøŒºŒøŒπœâœÑŒÆ œÉœÑŒ∑ŒΩ Œ±Œ∫œÑŒπŒΩŒøŒ∏ŒµœÅŒ±œÄŒµŒØŒ±',
                    PracticeID: 20,
                    PracticeTypeID: 26,
                    ApplicationCategoryID: 3
                }
            ],
            elementToCheck: 'PracticeTypeTitle'
        };
        
        const response = await axios.post(`${SERVER_URL}/compare`, exactRequest);
        const result = response.data;
        
        console.log(`‚úÖ Successfully processed exact user structure!`);
        console.log(`üìù Input Object structure:`, {
            practicetypes: result.inputObject.practicetypes,
            practice_number: result.inputObject.practice_number,
            practice_code: result.inputObject.practice_code,
            practice_id: result.inputObject.practice_id,
            uniqueId: result.inputObject.uniqueId,
            r_length: result.inputObject.r.length
        });
        console.log(`üìù Input String: "${result.inputString}"`);
        console.log(`üìä Found ${result.resultsReturned} matches out of ${result.totalCompared} practices\n`);
        
        console.log('Top matches:');
        result.results.forEach((match, index) => {
            console.log(`${index + 1}. Score: ${match.score} - "${match.targetString.substring(0, 80)}..."`);
        });
        
        console.log('\nüéØ Top Match Details:');
        if (result.topMatch) {
            console.log(`   Score: ${result.topMatch.score}`);
            console.log(`   Target: "${result.topMatch.targetString}"`);
            console.log(`   PracticeID: ${result.topMatch.originalObject.PracticeID}`);
            console.log(`   PracticeTypeID: ${result.topMatch.originalObject.PracticeTypeID}`);
        }
        
    } catch (error) {
        console.error('‚ùå Test failed:', error.message);
        if (error.response) {
            console.error('Response data:', error.response.data);
        }
    }
}

testExactStructure();
